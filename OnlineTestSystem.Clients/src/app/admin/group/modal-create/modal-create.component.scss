@use "../../../../styles.scss" as *;
@use "sass:color";

:host {
  display: block;
  max-width: 550px;
  width: 100%;
  padding: 0;
  box-sizing: border-box;
  font-family: $font-family;
}

.dialog-header {
  background: linear-gradient(
    135deg,
    $primary-color,
    color.adjust($primary-color, $lightness: -15%)
  );
  color: white;
  padding: 1.25rem 1.5rem;
  border-radius: $modal-radius $modal-radius 0 0;
  margin: 0;

  h2 {
    margin: 0;
    font-weight: 700;
    font-size: 1.5rem;
    letter-spacing: 0.2px;
    display: flex;
    align-items: center;

    mat-icon {
      margin-right: 0.75rem;
      font-size: 1.75rem;
      height: 1.75rem;
      width: 1.75rem;
    }
  }
}

.dialog-content {
  padding: 1.5rem;
  max-height: 60vh;
  overflow-y: auto;

  form {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;

    mat-form-field {
      width: 100%;
      margin-bottom: 0;

      ::ng-deep {
        .mat-mdc-form-field-wrapper {
          padding-bottom: 8px;
        }

        .mat-mdc-form-field-hint-wrapper,
        .mat-mdc-form-field-error-wrapper {
          padding: 0 12px;
        }

        .mat-mdc-text-field-wrapper {
          background-color: rgba($background-color, 0.5);
          border-radius: $input-radius;
          transition: background-color 0.2s ease;

          &:hover {
            background-color: rgba($background-color, 0.8);
          }
        }

        .mat-mdc-text-field-wrapper.mdc-text-field--outlined
          .mat-mdc-form-field-infix {
          padding-top: 12px;
          padding-bottom: 12px;
        }

        .mat-mdc-form-field-infix {
          min-height: 48px;
          padding: 0.65rem 0;
        }

        .mdc-text-field--outlined:not(.mdc-text-field--disabled)
          .mdc-notched-outline__leading,
        .mdc-text-field--outlined:not(.mdc-text-field--disabled)
          .mdc-notched-outline__notch,
        .mdc-text-field--outlined:not(.mdc-text-field--disabled)
          .mdc-notched-outline__trailing {
          border-color: rgba($border-color, 0.7);
        }

        .mdc-text-field--outlined:not(.mdc-text-field--disabled):hover
          .mdc-notched-outline__leading,
        .mdc-text-field--outlined:not(.mdc-text-field--disabled):hover
          .mdc-notched-outline__notch,
        .mdc-text-field--outlined:not(.mdc-text-field--disabled):hover
          .mdc-notched-outline__trailing {
          border-color: rgba($primary-color, 0.7);
        }

        .mat-mdc-form-field.mat-focused {
          .mdc-notched-outline__leading,
          .mdc-notched-outline__notch,
          .mdc-notched-outline__trailing {
            border-color: $primary-color !important;
            border-width: 2px;
          }

          .mat-mdc-form-field-focus-overlay {
            background-color: rgba($primary-color, 0.05);
          }
        }

        .mat-mdc-form-field-error {
          font-size: 0.85rem;
          margin-top: 4px;
          color: $error-color;
          font-weight: 500;
        }

        .mat-mdc-select-arrow-wrapper {
          transform: translateY(0);
        }

        .mat-mdc-form-field-icon-suffix {
          color: rgba($primary-color, 0.8);
          padding: 0 4px;
        }

        .mat-mdc-select-placeholder,
        .mat-mdc-form-field-label {
          color: $subtext-color;
        }
      }

      &.ng-invalid.ng-touched {
        ::ng-deep {
          .mdc-notched-outline__leading,
          .mdc-notched-outline__notch,
          .mdc-notched-outline__trailing {
            border-color: $error-color !important;
          }

          .mat-mdc-text-field-wrapper:hover {
            .mdc-notched-outline__leading,
            .mdc-notched-outline__notch,
            .mdc-notched-outline__trailing {
              border-color: $error-color !important;
            }
          }
        }
      }
    }

    // Specific styling for textarea
    textarea {
      resize: vertical;
      min-height: 80px;
      font-family: inherit;
      line-height: 1.4;
    }

    // Input number styling
    input[type="number"] {
      -moz-appearance: textfield;
    }

    input[type="number"]::-webkit-outer-spin-button,
    input[type="number"]::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }
  }
}

.dialog-actions {
  display: flex;
  justify-content: flex-end;
  gap: 1rem;
  margin-top: 1rem;
  padding: 1rem 1.5rem;
  border-top: 1px solid rgba($border-color, 0.3);
  background-color: rgba($background-color, 0.5);
  border-radius: 0 0 $modal-radius $modal-radius;

  button {
    min-width: 120px;
    font-weight: 600;
    border-radius: $button-radius;
    padding: 0.6rem 1rem;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  button[color="primary"] {
    background: linear-gradient(
      135deg,
      $primary-color,
      color.adjust($primary-color, $lightness: -10%)
    );
    color: white;
    box-shadow: 0 3px 12px rgba($primary-color, 0.25);

    &:hover {
      background: linear-gradient(
        135deg,
        color.adjust($primary-color, $lightness: -5%),
        color.adjust($primary-color, $lightness: -15%)
      );
      box-shadow: 0 4px 15px rgba($primary-color, 0.4);
      transform: translateY(-2px);
    }

    &:active {
      transform: translateY(1px);
      box-shadow: 0 2px 8px rgba($primary-color, 0.3);
    }

    &:disabled {
      background: color.adjust($border-color, $lightness: 10%);
      color: $subtext-color;
      box-shadow: none;
      transform: none;
      cursor: not-allowed;
    }

    mat-icon {
      margin-right: 0;
    }
  }

  button[type="button"] {
    background: white;
    color: $text-color;
    border: 1px solid rgba($border-color, 0.7);

    &:hover {
      background: rgba($background-color, 0.8);
      border-color: rgba($text-color, 0.5);
    }
  }
}

// Date picker styling
.mat-datepicker-toggle {
  color: $primary-color;

  ::ng-deep .mat-mdc-button-touch-target {
    height: 40px;
    width: 40px;
  }
}

.datetime-field {
  display: flex;
  gap: 16px;

  mat-form-field {
    flex: 1;
  }

  input[readonly] {
    cursor: pointer;
  }

  @media (max-width: 480px) {
    flex-direction: column;
    gap: 8px;
  }
}

// Style ngx-mat-select-search
::ng-deep {
  .mat-mdc-select-search-input {
    padding: 8px 12px !important;
    border-radius: $input-radius !important;
    background-color: white !important;
    border: 1px solid rgba($border-color, 0.5) !important;
    font-size: 0.9rem !important;

    &:focus {
      border-color: $primary-color !important;
      box-shadow: 0 0 0 3px rgba($primary-color, 0.15) !important;
      outline: none !important;
    }

    &::placeholder {
      color: $subtext-color !important;
    }
  }

  .mat-mdc-select-search-clear {
    color: $subtext-color !important;

    &:hover {
      color: $text-color !important;
      background-color: rgba($error-color, 0.1) !important;
    }
  }

  .mat-mdc-option {
    min-height: 48px;
    padding: 0 16px;

    &:hover:not(.mdc-list-item--disabled) {
      background-color: rgba($primary-color, 0.04) !important;
    }

    &.mdc-list-item--selected:not(.mdc-list-item--disabled) {
      background-color: rgba($primary-color, 0.12) !important;

      .mdc-list-item__primary-text {
        color: $primary-color !important;
        font-weight: 500 !important;
      }
    }
  }

  .mat-mdc-dialog-container .mdc-dialog__surface {
    border-radius: $modal-radius !important;
    box-shadow: 0 12px 32px rgba(0, 0, 0, 0.15) !important;
  }
}

// Hint styling
.mat-mdc-form-field-hint {
  color: $subtext-color;
  font-size: 0.85rem;
  margin-top: 4px;
}

// Loading state
.loading-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(255, 255, 255, 0.8);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
  backdrop-filter: blur(2px);

  mat-spinner {
    ::ng-deep circle {
      stroke: $primary-color;
    }
  }
}

// Responsive adjustments
@media (max-width: 576px) {
  :host {
    max-width: 95vw;
  }

  .dialog-header {
    padding: 1rem;

    h2 {
      font-size: 1.3rem;

      mat-icon {
        font-size: 1.5rem;
        height: 1.5rem;
        width: 1.5rem;
      }
    }
  }

  .dialog-content {
    padding: 1rem;
  }

  .dialog-actions {
    padding: 1rem;
    flex-direction: column-reverse;
    gap: 8px;

    button {
      width: 100%;
      justify-content: center;
      min-width: auto;
    }
  }
}

// Accessibility improvements
@media (prefers-reduced-motion: reduce) {
  * {
    transition: none !important;
    animation: none !important;
  }
}

// High contrast mode support
@media (prefers-contrast: high) {
  .dialog-header {
    border-bottom: 2px solid white;
  }

  .dialog-actions {
    border-top: 2px solid $border-color;
  }

  mat-form-field {
    ::ng-deep {
      .mdc-notched-outline__leading,
      .mdc-notched-outline__notch,
      .mdc-notched-outline__trailing {
        border-width: 2px !important;
      }
    }
  }
}
